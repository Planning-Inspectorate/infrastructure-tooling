parameters:
  - name: setupPeering
    default: true
    displayName: Network Peering Enabled?
    type: boolean

trigger: none

pr: none

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      
extends:
  template: stages/wrapper_cd.yml@templates
  parameters:
    deploymentStages:
      - name: Terraform Plan
        authType: terraform
        deploymentSteps:
          - template: ${{variables['Build.SourcesDirectory']}}/steps/terraform_plan.yml@templates
            parameters:
              subscriptionId: $(SUBSCRIPTION_ID)
              workingDirectory: $(Build.Repository.LocalPath)/infrastructure
              ${{ if eq(parameters.setupPeering, 'true') }}:
                environmentVariables:
                  TF_CLI_ARGS: -var-file=../terraform.tfvars
        isDeployment: false
      - name: Terraform Apply
        authType: terraform
        dependsOn:
          - Terraform Plan
        deploymentSteps:
          - template: ${{variables['Build.SourcesDirectory']}}/steps/terraform_apply.yml@templates
            parameters:
              subscriptionId: $(SUBSCRIPTION_ID)
        isDeployment: true
    environments:
      - name: Tooling
    pool: 
      vmImage: ubuntu-latest
    project: infrastructure
    